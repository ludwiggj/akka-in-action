akka {
  loggers = ["akka.event.slf4j.Slf4jLogger", "aia.logging.MyEventListener"]

  # Options: ERROR, WARNING, INFO, DEBUG
  # logging must be set to DEBUG to use any of the options below
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Log the complete configuration at INFO level when the actor
  # system is started. This is useful when you are uncertain of
  # what configuration is used.

  #log-config-on-start = on

  actor {
    debug {
      # logging of all user-level messages that are processed by Actors that use akka.event.LoggingReceive
      # enable function of LoggingReceive, which is to log any received message at DEBUG level
      receive = on

      # enable DEBUG logging of all AutoReceiveMessages
      # (Kill, PoisonPill and the like)
      autoreceive = on

      # enable DEBUG logging of actor lifecycle changes
      # (restarts, deaths etc)
      lifecycle = on

      # enable DEBUG logging of all LoggingFSMs for events,
      # transitions and timers
      fsm = on

      # enable DEBUG logging of subscription (subscribe/unsubscribe)
      # changes on the eventStream
      event-stream = on
    }
    remote {
      # If this is "on", Akka will log all outbound messages at
      # DEBUG level, if off then they are not logged
      log-sent-messages = on

      # If this is "on," Akka will log all inbound messages at
      # DEBUG level, if off then they are not logged
      log-received-messages = on
    }
  }
}